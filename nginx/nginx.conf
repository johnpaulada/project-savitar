worker_processes auto;
error_log /var/log/error.log;

events {
    worker_connections 1024;
}

http {
    include mime.types;

    default_type application/octet-stream;

    sendfile on;

    tcp_nopush on;

    keepalive_timeout 65;

    gzip on;

    gzip_comp_level 5;

    gzip_types text/plain text/css application/json application/x-javascript application/javascript text/javascript image/png image/jpeg image/gif text/xml application/xml application/xml+rss  application/x-font-ttf application/octet-stream application/vnd.ms-fontobject font/opentype image/svg+xml image/x-icon;

    server {
        listen 443 http2 ssl;

        add_header Link "</build/media-queries.min.css>; rel=preload; as=style, </build/typography.min.css>; rel=preload; as=style, </build/colors.min.css>; rel=preload; as=style, </build/main.min.css>; rel=preload; as=style, </build/main.min.js>; rel=preload; as=script";

        server_name localhost;

        keepalive_timeout 100;

        ssl_certificate /etc/nginx/ssl/localhost.crt;
        ssl_certificate_key /etc/nginx/ssl/localhost.key;

        pagespeed on;

        # Needs to exist and be writable by nginx.  Use tmpfs for best performance.
        pagespeed FileCachePath /var/ngx_pagespeed_cache;

        pagespeed RewriteLevel CoreFilters;

        # Ensure requests for pagespeed optimized resources go to the pagespeed handler
        # and no extraneous headers get set.
        location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
            add_header "" "";
        }

        location ~ "^/pagespeed_static/" { }
        location ~ "^/ngx_pagespeed_beacon$" { }

        location / {
            root html;
            index index.html index.htm;
            http2_push_preload on
        }
    }

    server {
       listen         80;
       listen    [::]:80;
       server_name    localhost;
       return         301 https://$server_name$request_uri;
    }
}